name: CI
on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:

jobs:
  # 优化点：将linter和license检查合并，因为它们依赖的环境相似，可以减少job启动的开销
  lint-and-license:
    name: Linter & License Check
    runs-on: ubuntu-22.04
    container: ghcr.io/jaxtonmax/hvisor-ci:22.04_pro
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Format Check
        run: make fmt-test

      - name: License Check
        run: ./tools/license_checker.sh

  unittest:
    name: Unittest
    runs-on: ubuntu-22.04
    container: ghcr.io/jaxtonmax/hvisor-ci:22.04_pro
    strategy:
      fail-fast: false
      matrix:
        include:
          - { arch: aarch64, board: "qemu-gicv3" }
          - { arch: aarch64, board: "qemu-gicv2" }
          - { arch: riscv64, board: "qemu-plic" }
          - { arch: riscv64, board: "qemu-aia" }
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up environment variables
        run: |
          echo "ARCH=${{ matrix.arch }}" >> $GITHUB_ENV
          echo "BOARD=${{ matrix.board }}" >> $GITHUB_ENV
          
      - name: Run Unit Test
        run: make test

  build:
    name: Build All Targets
    runs-on: ubuntu-22.04
    container: ghcr.io/jaxtonmax/hvisor-ci:22.04_pro
    strategy:
      fail-fast: false
      matrix:
        include:
          - { arch: aarch64, board: "qemu-gicv3" }
          - { arch: aarch64, board: "qemu-gicv2" }
          - { arch: aarch64, board: "zcu102" }
          - { arch: aarch64, board: "imx8mp" }
          - { arch: aarch64, board: "rk3568" }
          - { arch: aarch64, board: "rk3588" }
          - { arch: aarch64, board: "ok6254-c" }
          - { arch: riscv64, board: "qemu-aia" }
          - { arch: riscv64, board: "qemu-plic" }
          - { arch: loongarch64, board: "ls3a5000" }
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 优化点：为LoongArch动态加载并缓存工具链，这非常棒！
      - name: Cache and Install LoongArch Toolchain
        if: matrix.arch == 'loongarch64'
        uses: actions/cache@v4
        with:
          path: /opt/loongarch-toolchain
          key: ${{ runner.os }}-loongarch-toolchain-v8.0
      
      - name: Download LoongArch Toolchain if not cached
        if: matrix.arch == 'loongarch64' && steps.cache-loongarch.outputs.cache-hit != 'true'
        run: |
          mkdir -p /opt/loongarch-toolchain
          wget -qO- https://github.com/sunhaiyong1978/CLFS-for-LoongArch/releases/download/8.0/loongarch64-clfs-8.0-cross-tools-gcc-full.tar.xz | tar -xJ -C /opt/loongarch-toolchain

      - name: Add LoongArch Toolchain to PATH
        if: matrix.arch == 'loongarch64'
        run: echo "/opt/loongarch-toolchain/cross-tools/bin" >> $GITHUB_PATH
      
      - name: Set up environment variables
        run: |
          echo "ARCH=${{ matrix.arch }}" >> $GITHUB_ENV
          echo "BOARD=${{ matrix.board }}" >> $GITHUB_ENV
          
      - name: Build
        run: make

  systemtest:
    name: Systemtest
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/jaxtonmax/hvisor-ci:22.04_pro
      # systemtest 可能需要特殊权限来操作虚拟化设备
      options: --cap-add=SYS_ADMIN --privileged
    strategy:
      fail-fast: false
      matrix:
        include:
          - { arch: aarch64, board: "qemu-gicv3" }
          - { arch: riscv64, board: "qemu-plic" }
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        # 关键：确保检出子模块，因为hvisor-tool依赖cJSON
        with:
          submodules: 'recursive'

      - name: Set up environment variables
        run: |
          echo "ARCH=${{ matrix.arch }}" >> $GITHUB_ENV
          echo "BOARD=${{ matrix.board }}" >> $GITHUB_ENV

      # 修复点：删除所有手动的、复杂的构建脚本。
      # 直接运行 'make stest'，让项目自己的Makefile来处理其依赖项（如hvisor-tool）的构建。
      # Docker镜像已经提供了所有必要的编译器和库，Makefile现在可以正常工作了。
      - name: Run System Test
        run: make stest